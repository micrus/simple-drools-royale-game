package com.sample
 

 
 //Start turn
 rule "Start turn: init character"
 salience 200000
 	when 	
		Turn (status == TurnState.INIT)
 		character: Character ( status == Status.MOVED )
 	then 
 		character.setStatus(Status.NOT_MOVED);
 		update (character);
 end
 
  rule "Start turn: performing"
  salience 200000
 	when 	
		turn: Turn (status == TurnState.INIT)
 		not Character ( status == Status.MOVED )
 	then 
 		turn.setStatus(TurnState.PERFORMING);
 		update (turn);
 end
 
 		
 
 // Rule that handle the shrinking of the map
  rule "REMOVE PG OF THE BORDER" salience 300000
    when
    	setting : Settings( time!=0 && (time % 10) == 0 && gameOver == false) 
		lom : LocatedOnMap ( ((col in (setting.getLimitColLeft() , setting.getLimitColRight())) || (row in (setting.getLimitRowUp() , setting.getLimitRowDown())))&& removable == 1 )  
    then
		retract (lom);
 end
 
   rule "EFFECTIVELY REMOVE PORTIONS OF MAP" salience 300000 
    when
    	setting: Settings( time!= 0 && (time % 10) == 0 && gameOver == false)
		not LocatedOnMap ( ((col in (setting.getLimitColLeft() , setting.getLimitColRight())) || (row in (setting.getLimitRowUp() , setting.getLimitRowDown()))) && removable == 1 )  
    then
	
		
		for (int i = setting.getLimitColLeft(); i<=setting.getLimitColRight(); i++){
			
			insert ( new Wall(i, setting.getLimitRowUp()) );
			insert ( new Wall(i, setting.getLimitRowDown()) );
			
		}
		
		for (int i = setting.getLimitRowUp() + 1; i<=setting.getLimitRowDown() -1; i++){
			
			insert ( new Wall(setting.getLimitColLeft(), i) );
			insert ( new Wall(setting.getLimitColRight(), i) );
			
		}
		
		setting.decreaseLimit();
		setting.setTime( setting.getTime() + 1);
		update ( setting );
 end
 
  
 rule "REMOVE DIED PG" 
 salience 200000
 	when 
 		character: Character ( actualStat.getStat(StatAbility.LIFE)<=0 )
 	then 
 		retract (character);
 end
 
 
 rule "LOSE GAME BECAUSE YOU DIE"
 salience 200000
 	when 
 		setting: Settings( gameOver == false ) 
 		not Hero( )
 	then 
 		setting.setGameOver(true);
 		System.out.println("You lost! What an inglorious end for such a noble warrior");
 		update (setting);
 end
 
 rule "WIN GAME BECAUSE YOU ARE THE ONLY ONE"
 	when 
 		setting: Settings( gameOver == false ) 
 		Hero( ) 
 		not NPC( )
 	then 
 		setting.setGameOver(true);
 		System.out.println("Congrats! You win proud warrior!");
 		update (setting);
 end
 
 
 rule "END TURN" 
 	when 
 		setting: Settings( ) 
 		turn : Turn ( status == TurnState.PERFORMING) 
 		not Character ( status == Status.NOT_MOVED )
 	then
 		setting.setTime(setting.getTime() + 1);
 		update (setting);
 		retract(turn);
 end
 
 